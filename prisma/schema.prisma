model DewKitchenCategory {
  id       Int              @id @default(autoincrement())
  name     String           @unique
  menus    DewKitchenMenu[]
  createAt DateTime         @default(now())
  updateAt DateTime         @updatedAt
}

model DewKitchenMenu {
  id           Int                 @id @default(autoincrement())
  name         String
  image        String
  price        Float
  categoryKey  DewKitchenCategory? @relation(fields: [categoryName], references: [name])
  categoryName String?
  orderItems   DewOrderItem[]
  createAt     DateTime            @default(now())
  updateAt     DateTime            @updatedAt
}

model DewKitchenOrder {
  id       Int            @id @default(autoincrement())
  status   String         @default("PENDING")
  tableId  Int
  items    DewOrderItem[]
  createAt DateTime       @default(now())
  updateAt DateTime       @updatedAt
}

model DewOrderItem {
  id         Int              @id @default(autoincrement())
  menu       DewKitchenMenu   @relation(fields: [menuId], references: [id])
  menuId     Int
  order      DewKitchenOrder? @relation(fields: [orderId], references: [id])
  orderId    Int?
  quantity   Int
  totalPrice Float
  createAt   DateTime         @default(now())
  updateAt   DateTime         @updatedAt
}

model Todolist {
  id        Int      @id @default(autoincrement())
  task      String
  notes     String?
  status    String   @default("PENDING")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "debian-openssl-1.1.x"]
  output        = "../prisma/client"
}
