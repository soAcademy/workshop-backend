model User {
  id             Int             @id @default(autoincrement())
  name           String
  image          String
  email          String
  createAt       DateTime        @default(now())
  updateAt       DateTime        @updatedAt
  userInChannels UserInChannel[]
  reactions      Reaction[]
  comments       Comment[]
  subscribes     Subscribe[]
}

model Channel {
  id             Int             @id @default(autoincrement())
  name           String
  image          String
  description    String
  createAt       DateTime        @default(now())
  updateAt       DateTime        @updatedAt
  userInChannels UserInChannel[]
  videos         Video[]
  subscribes     Subscribe[]
}

enum Role {
  ADMIN
  EDITOR
  CREATOR
}

model UserInChannel {
  id        Int      @id @default(autoincrement())
  channel   Channel  @relation(fields: [channelId], references: [id])
  channelId Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  role      Role
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Video {
  id        Int        @id @default(autoincrement())
  name      String
  media     String
  detail    String
  channel   Channel    @relation(fields: [channelId], references: [id])
  channelId Int
  createAt  DateTime   @default(now())
  updateAt  DateTime   @updatedAt
  reactions Reaction[]
  comments  Comment[]
}

enum LikeDislike {
  LIKE
  DISLIKE
}

model Reaction {
  id       Int         @id @default(autoincrement())
  user     User        @relation(fields: [userId], references: [id])
  userId   Int
  video    Video       @relation(fields: [videoId], references: [id])
  videoId  Int
  like     LikeDislike
  createAt DateTime    @default(now())
  updateAt DateTime    @updatedAt
}

model Comment {
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  video    Video    @relation(fields: [videoId], references: [id])
  videoId  Int
  detail   String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Subscribe {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  channel   Channel  @relation(fields: [channelId], references: [id])
  channelId Int
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
}
