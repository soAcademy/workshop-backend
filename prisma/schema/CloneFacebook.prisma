model FacebookUser {
  id                Int                        @id @default(autoincrement())
  username          String                     @unique
  image             String?
  coverImage        String?
  createdAt         DateTime                   @default(now())
  updatedAt         DateTime                   @updatedAt
  from              FacebookUserRelationship[] @relation("from")
  to                FacebookUserRelationship[] @relation("to")
  userInGroups      FacebookUserInGroup[]
  posts             FacebookPost[]
  directMessageFrom FacebookDirectMessage[]    @relation("DmFrom")
  directMessageTo   FacebookDirectMessage[]    @relation("DmTo")
  commentPosts      FacebookCommentPost[]
  likes             FacebookLike[]
  postDestinations  FacebookPostDestination[]
}

model FacebookUserRelationship {
  id         Int          @id @default(autoincrement())
  from       FacebookUser @relation("from", fields: [fromUserId], references: [id])
  to         FacebookUser @relation("to", fields: [toUserId], references: [id])
  fromUserId Int
  toUserId   Int
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model FacebookDirectMessage {
  id         Int          @id @default(autoincrement())
  from       FacebookUser @relation("DmFrom", fields: [fromUserId], references: [id])
  to         FacebookUser @relation("DmTo", fields: [toUserId], references: [id])
  fromUserId Int
  toUserId   Int
  message    String
  image      String?
  readStatus Boolean
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model FacebookLocation {
  id        Int            @id @default(autoincrement())
  name      String         @unique
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  posts     FacebookPost[]
}

model FacebookHashtag {
  id        Int            @id @default(autoincrement())
  name      String
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  posts     FacebookPost[]
}

model FacebookLike {
  id        Int                  @id @default(autoincrement())
  type      FacebookLikeTypeEnum
  user      FacebookUser         @relation(fields: [userId], references: [id])
  userId    Int
  posts     FacebookPost?        @relation(fields: [postId], references: [id])
  postId    Int?
  createdAt DateTime             @default(now())
  updatedAt DateTime             @updatedAt
}

enum FacebookLikeTypeEnum {
  SAD
  LIKE
  LOVE
  CARE
  ANGRY
  HAHA
  WOW
}

model FacebookShareType {
  id           Int                   @id @default(autoincrement())
  type         String
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @updatedAt
  commentPosts FacebookCommentPost[]
  posts        FacebookPost[]
}

model FacebookGroup {
  id               Int                       @id @default(autoincrement())
  name             String                    @unique
  createdAt        DateTime                  @default(now())
  updatedAt        DateTime                  @updatedAt
  userInGroups     FacebookUserInGroup[]
  postDestinations FacebookPostDestination[]
}

model FacebookUserInGroup {
  id        Int           @id @default(autoincrement())
  user      FacebookUser  @relation(fields: [userId], references: [id])
  userId    Int
  group     FacebookGroup @relation(fields: [groupId], references: [id])
  groupId   Int
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model FacebookPostDestination {
  id        Int            @id @default(autoincrement())
  type      String
  userWall  FacebookUser?  @relation(fields: [userId], references: [id])
  group     FacebookGroup? @relation(fields: [groupId], references: [id])
  userId    Int
  groupId   Int
  post      FacebookPost?  @relation(fields: [postId], references: [id])
  postId    Int?
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model FacebookPost {
  id                Int                       @id @default(autoincrement())
  user              FacebookUser              @relation(fields: [userId], references: [id])
  userId            Int
  message           String?
  image             String?
  location          FacebookLocation          @relation(fields: [locationId], references: [id])
  locationId        Int
  hashtag           FacebookHashtag?          @relation(fields: [hashtagId], references: [id])
  hashtagId         Int
  share             FacebookShareType?        @relation(fields: [shareToId], references: [id])
  shareToId         Int
  createdAt         DateTime                  @default(now())
  updatedAt         DateTime                  @updatedAt
  likes             FacebookLike[]
  commentPosts      FacebookCommentPost[]
  postDestionations FacebookPostDestination[]
}

model FacebookCommentPost {
  id           Int                   @id @default(autoincrement())
  post         FacebookPost          @relation(fields: [postId], references: [id])
  postId       Int
  user         FacebookUser          @relation(fields: [userId], references: [id])
  userId       Int
  message      String?
  image        String?
  commentTo    FacebookCommentPost?  @relation("replyComm", fields: [commentToId], references: [id])
  commentToId  Int?
  share        FacebookShareType     @relation(fields: [shareToId], references: [id])
  shareToId    Int
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @updatedAt
  commentPosts FacebookCommentPost[] @relation("replyComm")
}

// model FacebookReplyComment {
//   id            Int                 @id @default(autoincrement())
//   user          FacebookUser        @relation(fields: [userId], references: [id])
//   userId        Int
//   comment       FacebookCommentPost @relation(fields: [commentPostId], references: [id])
//   commentPostId Int
//   message       String
//   image         String?
//   createdAt     DateTime            @default(now())
//   updatedAt     DateTime            @updatedAt
// }

// model FacebookSharePost {
//   id          Int                @id @default(autoincrement())
//   post        FacebookPost       @relation(fields: [postId], references: [id])
//   postId      Int
//   user        FacebookUser       @relation(fields: [userId], references: [id])
//   userId      Int
//   message     String?
//   image       String?
//   share       FacebookShareType? @relation(fields: [shareTypeId], references: [id])
//   shareTypeId Int
//   createdAt   DateTime           @default(now())
//   updatedAt   DateTime           @updatedAt
// }
