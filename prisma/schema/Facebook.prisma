model UserRelation {
  id         Int      @id @default(autoincrement())
  from       User     @relation("FromUserRelation", fields: [fromUserId], references: [id])
  to         User     @relation("ToUserRelation", fields: [toUserId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  fromUserId Int
  toUserId   Int
}

model User {
  id                 Int             @id @default(autoincrement())
  name               String
  profileImage       String
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
  posts              Post[]
  fromDirectMessages DirectMessage[] @relation("FromDirectMessage")
  toDirectMessages   DirectMessage[] @relation("ToDirectMessage")
  postReplies        PostReply[]
  fromUserRelations  UserRelation[]  @relation("FromUserRelation")
  toUserRelations    UserRelation[]  @relation("ToUserRelation")
  ShareUser          SharePost[]     @relation("ShareUser")
  GroupPost          GroupPost[]
  LikePost           LikePost[]
}

model Post {
  id                Int                @id @default(autoincrement())
  user              User               @relation(fields: [userId], references: [id])
  message           String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  userId            Int
  messageToHashTags MessageToHashTag[]
  postReplies       PostReply[]
  LikePost          LikePost[]
}

model DirectMessage {
  id         Int      @id @default(autoincrement())
  from       User     @relation("FromDirectMessage", fields: [fromUserId], references: [id])
  to         User     @relation("ToDirectMessage", fields: [toUserId], references: [id])
  message    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  fromUserId Int
  toUserId   Int
}

model MessageToHashTag {
  id        Int      @id @default(autoincrement())
  post      Post     @relation(fields: [postId], references: [id])
  hashtag   Hashtag  @relation(fields: [hashtagId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postId    Int
  hashtagId Int
}

model Hashtag {
  id               Int                @id @default(autoincrement())
  name             String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  MessageToHashTag MessageToHashTag[]
}

model PostReply {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  message   String
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  postId    Int
}

model GroupPost {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
}

model LikePost {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  likecategory String
  post         Post     @relation(fields: [postId], references: [id])
  postId       Int
  user         User?    @relation(fields: [userId], references: [id])
  userId       Int?
}

model SharePost {
  id          Int      @id @default(autoincrement())
  user        User     @relation("ShareUser", fields: [shareUserId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  shareUserId Int
}
ถ้าจะใ่สต้งอใส่ทั้งคู่ 