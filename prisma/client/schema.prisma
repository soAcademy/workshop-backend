model BinKitchenCategory {
  id        Int              @id @default(autoincrement())
  name      String           @unique
  menus     BinKitchenMenu[]
  createdAt DateTime         @default(now())
  updatedAt DateTime         @default(now())
}

model BinKitchenMenu {
  id                  Int                   @id @default(autoincrement())
  name                String
  image               String
  price               Float
  category            BinKitchenCategory?   @relation(fields: [categoryName], references: [name])
  categoryName        String?
  createdAt           DateTime              @default(now())
  updateAt            DateTime              @default(now())
  binKitchenOrderItem BinKitchenOrderItem[]
}

model BinKitchenOrder {
  id        Int                   @id @default(autoincrement())
  status    String                @default("PENDING")
  tableId   Int
  items     BinKitchenOrderItem[]
  createdAt DateTime              @default(now())
  updateAt  DateTime              @default(now())
}

model BinKitchenOrderItem {
  id         Int              @id @default(autoincrement())
  menu       BinKitchenMenu   @relation(fields: [menuId], references: [id])
  menuId     Int
  order      BinKitchenOrder? @relation(fields: [orderId], references: [id])
  orderId    Int?
  quantity   Int
  totalPrice Float
  createdAt  DateTime         @default(now())
  updateAt   DateTime         @default(now())
}

model TodoList {
  id        Int      @id @default(autoincrement())
  task      String
  status    String   @default("PENDING")
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "debian-openssl-1.1.x"]
  output        = "../prisma/client"
}
