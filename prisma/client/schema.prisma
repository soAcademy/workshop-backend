model Category {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Menu      Menu[]

  @@schema("binkitchen")
}

model Menu {
  id         Int         @id @default(autoincrement())
  name       String
  image      String
  price      Float
  category   Category?   @relation(fields: [categoryId], references: [id])
  categoryId Int?
  orderItems OrderItem[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  @@schema("binkitchen")
}

model Order {
  id        Int         @id @default(autoincrement())
  status    String      @default("PENDING")
  tableId   Int
  items     OrderItem[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@schema("binkitchen")
}

model OrderItem {
  id         Int      @id @default(autoincrement())
  menu       Menu     @relation(fields: [menuId], references: [id])
  menuId     Int
  order      Order?   @relation(fields: [orderId], references: [id])
  orderId    Int?
  quantity   Int
  totalPrice Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@schema("binkitchen")
}

model QuizCategory {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Quiz      Quiz[]

  @@map("Category")
  @@schema("binquiz")
}

model Choice {
  id          Int      @id @default(autoincrement())
  answerText  String
  quiz        Quiz?    @relation(name: "choices", fields: [quizId], references: [id])
  quizId      Int?
  correctQuiz Quiz[]   @relation(name: "correctChoice")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@schema("binquiz")
}

model Quiz {
  id              Int          @id @default(autoincrement())
  questionText    String
  category        QuizCategory @relation(fields: [quizCategoryId], references: [id])
  quizCategoryId  Int
  choices         Choice[]     @relation(name: "choices")
  correctChoice   Choice       @relation(name: "correctChoice", fields: [correctChoiceId], references: [id])
  correctChoiceId Int
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  @@schema("binquiz")
}

model TodoList {
  id        Int      @id @default(autoincrement())
  task      String
  status    String   @default("PENDING")
  bgColor   String   @default("slate")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("todolist")
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["todolist", "binkitchen", "binquiz"]
}

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "darwin-arm64", "debian-openssl-1.1.x"]
  output          = "../prisma/client"
  previewFeatures = ["multiSchema"]
}
