model user {
  id        Int      @id @default(autoincrement())
  nameUser  String
  category  String   @unique
  createdAt DateTime @default(now())
}

model Category {
  id        Int      @id @default(autoincrement())
  category  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quiz      Quiz[]
  rounds    Round[]
}

model Quiz {
  id             Int         @id @default(autoincrement())
  quiz           String
  categoryNameId Int?
  answer         Choice      @relation("QuizAnswer", fields: [quizAnswerId], references: [id])
  // อะไรที่มันเป็น one to one เราจะต้องใส่ Unique
  quizAnswerId   Int         @unique
  choices        Choice[]
  roundQuiz      RoundQuiz[]
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  category       Category    @relation(fields: [categoryId], references: [id])
  categoryId     Int
}

model Choice {
  id         Int         @id @default(autoincrement())
  choice     String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  quiz       Quiz?       @relation(fields: [quizId], references: [id])
  quizId     Int?
  quizAnswer Quiz?       @relation("QuizAnswer")
  roundQuiz  RoundQuiz[]
}

model Round {
  id         Int         @id @default(autoincrement())
  roundQiuz  RoundQuiz[]
  createdAt  DateTime    @default(now())
  updateAt   DateTime    @updatedAt
  Category   Category?   @relation(fields: [categoryId], references: [id])
  categoryId Int?
}

model RoundQuiz {
  id        Int      @id @default(autoincrement())
  category  String   @unique
  createdAt DateTime @default(now())
  round     Round?   @relation(fields: [roundId], references: [id])
  roundId   Int?
  choice    Choice?  @relation(fields: [choiceId], references: [id])
  choiceId  Int?
  quiz      Quiz?    @relation(fields: [quizId], references: [id])
  quizId    Int?
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "debian-openssl-1.1.x"]
  output        = "../prisma/client"
}
